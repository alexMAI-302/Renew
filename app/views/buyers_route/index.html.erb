<% content_for :js do %>
	<script src="http://api-maps.yandex.ru/2.0/?load=package.full&mode=debug&lang=ru-RU" type="text/javascript"></script>
	<%= javascript_include_tag :defaults %>
    <script type="text/javascript">
		var pp = <%= @rst_new %> ;
		var rr = <%= @route_json %> ;
		var polygons = new Array; 
		var current_route = <%= @route_index %>;
		var style1;
		var style2;
		var map;
		ymaps.ready(function(){
			var center=[55.76, 37.64];
            // Создание экземпляра карты и его привязка к созданному контейнеру
            map = new ymaps.Map("YMapsID",
            	{
			        // Центр карты
			        center: center,
			        zoom: 10,
			        // Тип карты
			        type: "yandex#map",
			        behaviors: ["default", "scrollZoom"]
			    }
			);

            // Добавление элементов управления
            map.controls.add("zoomControl");
            map.controls.add("typeSelector");
            map.controls.add("mapTools");

			style1 = 
			{
				// - цвет и прозрачность линии
				strokeColor: "ffff0088",
				// - цвет и прозрачность заливки
				fillColor: "ff000055"
			};
			
			style2 = 
			{
				// - цвет и прозрачность заливки
				fillColor: "ffff0055"
			};
			
			for (var i = 0; i < rr.length; i++) {
				if (rr[i].points != null && rr[i].points != '') {
					
					polygons[i] = new ymaps.Polygon(
						ymaps.geometry.Polygon.fromEncodedCoordinates(rr[i].points),
						null,
						style1);
				}
				else
				{
					polygons[i] = new ymaps.Polygon([[center]], null, style1);
				};
				map.geoObjects.add(polygons[i]);
				polygons[i].events.add("geometrychange", function () {
					set_points();
				});
            };
            
			slavesel(current_route);
      });
		
		function set_points() {
			var cc = 0, route_points=[]; points_ids="", geometry=polygons[current_route].geometry, isEmpty=isEmptyGeometry(geometry);
			$('a_points').value =  isEmpty? "" : ymaps.geometry.Polygon.toEncodedCoordinates(geometry);
			rr[current_route].points = $('a_points').value;
			if(!isEmpty){
				for (var i = 0; i < pp.length; i++) {
					if (pp[i].latitude!=null && pp[i].longitude!=null && geometry.contains([pp[i].latitude, pp[i].longitude])) {
						route_points.push(pp[i].id);
						cc++;
					}
				}
				points_ids=route_points.join();				
			}
			$('load_csv_link').href="";
			if(points_ids.length>0){
				$('load_csv_link').href="/buyers_route/get_info_csv?points="+points_ids;
			}
			$('a_cc').value = cc;
		};
		
		function isEmptyGeometry(geometry){
			var points=(geometry!=null)?geometry.get(0):null;
			return (points==null || ((points.length==2) && (points[0][0]==points[1][0] && points[0][1]==points[1][1])));
		};
		
		function slavesel( v ){
			$('a_routeid').value = rr[v].id;
			polygons[current_route].editor.stopEditing();
			polygons[current_route].options.set("fillColor", "ff000055");
			rr[current_route].points = ymaps.geometry.Polygon.toEncodedCoordinates(polygons[current_route].geometry);
			current_route = v;
			polygons[current_route].editor.startEditing();
			polygons[current_route].options.set("fillColor", "ffff0055");
			if(!isEmptyGeometry(polygons[current_route].geometry)){
				map.setBounds(polygons[current_route].geometry.getBounds());
			} else {
				var points=(polygons[current_route].geometry!=null)?polygons[current_route].geometry.getCoordinates()[0]:[];
				map.setCenter((points.length>=1? points[0] : [55.76, 37.64]), 10);
			}
			set_points();
		};
		
		function changePointsStr()
		{
			$('a_points_str').value="";
			var currentPoints=polygons[current_route].geometry.getCoordinates()[0];
			for(var i=0; i<currentPoints.length; i++){
				$('a_points_str').value+=i+", "+currentPoints[i][1]+", "+currentPoints[i][0]+";";
			}
			return false;
		}
    </script>
<%	end -%>

<% content_for :title do %>
Определение зон доставки
<%	end -%>

<% content_for :content do %>
	<div id="wrapper">
		<div id="groupselect">
			<% form_tag do %>
				<fieldset>
					<legend>Настройки</legend>
					<table>
						<tr>
							<td><b>Площадка:</b> </td>
							<td><%=  select(:post, :site, @site_list, {:selected => @site}) %>	</td>
							<td><b>Тариф:</b> </td>
							<td><%=  select(:post, :spv_id, @spv_list, {:selected => @spv_id}) %>
							<%= submit_tag 'Выбрать' %>
							</td>
						</tr>
						<tr>
							<td><b>Маршрут:</b> </td>
							<td><%=  select(:post, :route, @route_list, {:selected => @route_index}, {:onchange => "slavesel(this.value)"}) %>
							</td>
							<td></td>
							<td></td>
						</tr>
					</table>
				</fieldset>			
			<% end %> 
		</div>
		<div id="map">
			<p><b>Укажите вершины зоны маршрута:</b></p>
			<div id="YMapsID"></div>
			<% form_tag :action => 'save_point' do %>
				<p><b>Точек в зоне:</b>
				<%= text_field(:a, :cc, :size => "15",  :value => 0, :class => "w30px", :align => "center", :readonly => 'true') %>	<input type="submit" value="Сохранить" onclick="changePointsStr();"></p>
				<%= hidden_field(:a, :points,  :size => "100", :value => @route_points, :class => "encode-points", :readonly => 'true') %>
				<%= hidden_field(:a, :points_str, :class => "encode-points", :readonly => 'true') %>
				
				<%= hidden_field(:a, :routeid, :size => "30",  :value => @route_id, :class => "routeid", :readonly => 'true') %>
				
				<a id="load_csv_link" target="new">Загрузить информацию по точкам в маршруте</a>
			<% end %>
			</div>
		</div>
	</div>
<% end -%>